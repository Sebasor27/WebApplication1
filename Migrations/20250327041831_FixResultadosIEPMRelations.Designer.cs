// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Models;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(CentroEmpContext))]
    [Migration("20250327041831_FixResultadosIEPMRelations")]
    partial class FixResultadosIEPMRelations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication1.Models.AccionesMejoraIepm", b =>
                {
                    b.Property<int>("IdAccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAccion"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("RangoMax")
                        .HasColumnType("decimal(5, 3)");

                    b.Property<decimal>("RangoMin")
                        .HasColumnType("decimal(5, 3)");

                    b.Property<string>("Recomendaciones")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("IdAccion")
                        .HasName("PK__Acciones__9845169B327CDA2F");

                    b.ToTable("AccionesMejoraIEPM", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.Competencia", b =>
                {
                    b.Property<int>("IdCompetencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_competencia");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCompetencia"));

                    b.Property<string>("NombreCompetencia")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre_competencia");

                    b.Property<decimal>("PesoRelativo")
                        .HasColumnType("decimal(6, 5)")
                        .HasColumnName("peso_relativo");

                    b.Property<int>("PuntosMaximos")
                        .HasColumnType("int")
                        .HasColumnName("puntos_maximos");

                    b.HasKey("IdCompetencia");

                    b.ToTable("competencias", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.CriteriosEvaluacionIepm", b =>
                {
                    b.Property<int>("IdCriterio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCriterio"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("IdIndicador")
                        .HasColumnType("int");

                    b.Property<int>("Valor")
                        .HasColumnType("int");

                    b.HasKey("IdCriterio")
                        .HasName("PK__Criterio__7139448222A73291");

                    b.HasIndex("IdIndicador");

                    b.ToTable("CriteriosEvaluacionIEPM", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.CuestionariosIepm", b =>
                {
                    b.Property<int>("IdCuestionario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCuestionario"));

                    b.Property<string>("Destinatario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Instrucciones")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdCuestionario")
                        .HasName("PK__Cuestion__69F3E5579F6DDBF1");

                    b.ToTable("CuestionariosIEPM", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.DatosEmp", b =>
                {
                    b.Property<int>("IdDatosEmp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_datos_emp");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDatosEmp"));

                    b.Property<int>("IdEmprendedor")
                        .HasColumnType("int")
                        .HasColumnName("id_emprendedor");

                    b.Property<string>("NegociosEmp")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("negocios_emp");

                    b.Property<string>("NivelEdAlc")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nivel_ed_alc");

                    b.Property<string>("Provincia")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("provincia");

                    b.Property<string>("RangoEdad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("rango_edad");

                    b.Property<string>("TitulosAlc")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("titulos_alc");

                    b.HasKey("IdDatosEmp");

                    b.HasIndex(new[] { "IdEmprendedor" }, "fk_id_emprendedor");

                    b.ToTable("datos_emp", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.DimensionesIepm", b =>
                {
                    b.Property<int>("IdDimensionIepm")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdDimensionIEPM");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDimensionIepm"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("FechaActualizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Formula")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Peso")
                        .HasColumnType("decimal(5, 3)");

                    b.HasKey("IdDimensionIepm")
                        .HasName("PK__Dimensio__C687E8DEC52A8E53");

                    b.ToTable("DimensionesIEPM", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.Emprendedore", b =>
                {
                    b.Property<int>("IdEmprendedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_emprendedor");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEmprendedor"));

                    b.Property<short>("AnoCreacionEmpresa")
                        .HasColumnType("smallint")
                        .HasColumnName("ano_creacion_empresa");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("cedula");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("celular");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("correo");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("direccion");

                    b.Property<string>("Edad")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("edad");

                    b.Property<int>("EmpleadosHombres")
                        .HasColumnType("int")
                        .HasColumnName("empleados_hombres");

                    b.Property<int>("EmpleadosMujeres")
                        .HasColumnType("int")
                        .HasColumnName("empleados_mujeres");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    b.Property<string>("NivelEstudio")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nivel_estudio");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre");

                    b.Property<string>("RangoEdadEmpleados")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("rango_edad_empleados");

                    b.Property<string>("Ruc")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)")
                        .HasColumnName("ruc");

                    b.Property<string>("SueldoMensual")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("sueldo_mensual");

                    b.Property<string>("Telefono")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("telefono");

                    b.Property<string>("TipoEmpresa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tipo_empresa");

                    b.Property<bool>("TrabajoRelacionDependencia")
                        .HasColumnType("bit")
                        .HasColumnName("trabajo_relacion_dependencia");

                    b.HasKey("IdEmprendedor")
                        .HasName("Pk_emprendedores");

                    b.HasIndex(new[] { "Cedula" }, "cedula")
                        .IsUnique();

                    b.HasIndex(new[] { "Correo" }, "correo")
                        .IsUnique();

                    b.HasIndex(new[] { "IdUsuario" }, "id_usuario");

                    b.HasIndex(new[] { "Ruc" }, "ruc")
                        .IsUnique();

                    b.ToTable("emprendedores", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.EncuestasIce", b =>
                {
                    b.Property<int>("IdRespuesta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_respuesta");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRespuesta"));

                    b.Property<int>("IdEmprendedor")
                        .HasColumnType("int")
                        .HasColumnName("id_emprendedor");

                    b.Property<int>("IdEncuesta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("id_encuesta");

                    b.Property<int>("IdPregunta")
                        .HasColumnType("int")
                        .HasColumnName("id_pregunta");

                    b.Property<int>("ValorRespuesta")
                        .HasColumnType("int")
                        .HasColumnName("valor_respuesta");

                    b.HasKey("IdRespuesta")
                        .HasName("Pk_encuestas_ice");

                    b.HasIndex(new[] { "IdEmprendedor" }, "id_emprendedor");

                    b.HasIndex(new[] { "IdEncuesta" }, "id_encuesta");

                    b.HasIndex(new[] { "IdPregunta" }, "id_pregunta");

                    b.ToTable("encuestas_ice", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.EncuestasIepm", b =>
                {
                    b.Property<int>("IdEncuestaIepm")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdEncuestaIEPM");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEncuestaIepm"));

                    b.Property<DateTime?>("FechaAplicacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("IdEmprendedor")
                        .HasColumnType("int");

                    b.HasKey("IdEncuestaIepm")
                        .HasName("PK__Encuesta__72EAE9F7AB2B5FBA");

                    b.HasIndex("IdEmprendedor");

                    b.ToTable("EncuestasIEPM", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.Indicadore", b =>
                {
                    b.Property<int>("IdIndicadores")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_indicadores");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdIndicadores"));

                    b.Property<string>("Acciones")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("acciones");

                    b.Property<string>("NivelDesarrollo")
                        .HasMaxLength(550)
                        .HasColumnType("nvarchar(550)")
                        .HasColumnName("nivel_desarrollo");

                    b.Property<string>("Rango")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("rango");

                    b.Property<string>("Valoracion")
                        .HasMaxLength(550)
                        .HasColumnType("nvarchar(550)")
                        .HasColumnName("valoracion");

                    b.HasKey("IdIndicadores")
                        .HasName("Pk_indicadores");

                    b.ToTable("indicadores", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.IndicadoresIepm", b =>
                {
                    b.Property<int>("IdIndicador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdIndicador"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Formula")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("IdDimension")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Peso")
                        .HasColumnType("decimal(5, 3)");

                    b.HasKey("IdIndicador")
                        .HasName("PK__Indicado__F912C4F19D1724C2");

                    b.HasIndex("IdDimension");

                    b.ToTable("IndicadoresIEPM", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.PreguntasIce", b =>
                {
                    b.Property<int>("IdPregunta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_pregunta");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPregunta"));

                    b.Property<int>("IdCompetencia")
                        .HasColumnType("int")
                        .HasColumnName("id_competencia");

                    b.Property<string>("TextoPregunta")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("texto_pregunta");

                    b.HasKey("IdPregunta");

                    b.HasIndex(new[] { "IdCompetencia" }, "id_competencia");

                    b.ToTable("preguntas_ice", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.PreguntasIepm", b =>
                {
                    b.Property<int>("IdPregunta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPregunta"));

                    b.Property<string>("Enunciado")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("IdCuestionario")
                        .HasColumnType("int");

                    b.Property<int>("IdIndicador")
                        .HasColumnType("int");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.HasKey("IdPregunta")
                        .HasName("PK__Pregunta__754EC09EA2CC1C55");

                    b.HasIndex("IdCuestionario");

                    b.HasIndex("IdIndicador");

                    b.ToTable("PreguntasIEPM", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.RespuestasIepm", b =>
                {
                    b.Property<int>("IdRespuesta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRespuesta"));

                    b.Property<string>("Comentarios")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("IdEmprendedor")
                        .HasColumnType("int");

                    b.Property<int>("IdEncuesta")
                        .HasColumnType("int");

                    b.Property<int>("IdPregunta")
                        .HasColumnType("int");

                    b.Property<int>("Valor")
                        .HasColumnType("int");

                    b.HasKey("IdRespuesta")
                        .HasName("PK__Respuest__D34801983A29682C");

                    b.HasIndex("IdEmprendedor");

                    b.HasIndex("IdEncuesta");

                    b.HasIndex("IdPregunta");

                    b.ToTable("RespuestasIEPM", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.ResultadosAccionesIepm", b =>
                {
                    b.Property<int>("IdResultadoAccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdResultadoAccion"));

                    b.Property<int>("IdAccion")
                        .HasColumnType("int");

                    b.Property<int>("IdResultadoIepm")
                        .HasColumnType("int");

                    b.HasKey("IdResultadoAccion")
                        .HasName("PK_ResultadosAccionesIEPM");

                    b.HasIndex("IdAccion");

                    b.HasIndex("IdResultadoIepm");

                    b.ToTable("ResultadosAccionesIEPM", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.ResultadosDimensionesIepm", b =>
                {
                    b.Property<int>("IdResultadoDimension")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdResultadoDimension"));

                    b.Property<DateTime?>("FechaCalculo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("IdDimension")
                        .HasColumnType("int");

                    b.Property<int>("IdEncuesta")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(5, 3)");

                    b.HasKey("IdResultadoDimension")
                        .HasName("PK__Resultad__35BDC62F3509C98E");

                    b.HasIndex("IdDimension");

                    b.HasIndex("IdEncuesta");

                    b.ToTable("ResultadosDimensionesIEPM", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.ResultadosIce", b =>
                {
                    b.Property<int>("IdResultado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_resultado");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdResultado"));

                    b.Property<int>("IdCompetencia")
                        .HasColumnType("int")
                        .HasColumnName("id_competencia");

                    b.Property<int>("IdEmprendedor")
                        .HasColumnType("int")
                        .HasColumnName("id_emprendedor");

                    b.Property<int>("IdEncuesta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("id_encuesta");

                    b.Property<decimal>("PuntuacionCompetencia")
                        .HasColumnType("decimal(6, 5)")
                        .HasColumnName("puntuacion_competencia");

                    b.Property<int>("Valoracion")
                        .HasColumnType("int")
                        .HasColumnName("valoracion");

                    b.HasKey("IdResultado");

                    b.HasIndex(new[] { "IdCompetencia" }, "id_competencia");

                    b.HasIndex(new[] { "IdEmprendedor" }, "id_emprendedor");

                    b.ToTable("resultados_ice", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.ResultadosIepm", b =>
                {
                    b.Property<int>("IdResultadoIepm")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdResultadoIEPM");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdResultadoIepm"));

                    b.Property<DateTime?>("FechaCalculo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("IdEmprendedor")
                        .HasColumnType("int");

                    b.Property<int>("IdEncuesta")
                        .HasColumnType("int");

                    b.Property<decimal>("Iepm")
                        .HasColumnType("decimal(5, 3)")
                        .HasColumnName("IEPM");

                    b.Property<string>("Valoracion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdResultadoIepm")
                        .HasName("PK_ResultadosIEPM");

                    b.HasIndex("IdEmprendedor");

                    b.HasIndex("IdEncuesta");

                    b.ToTable("ResultadosIEPM", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.ResultadosIndicadoresIepm", b =>
                {
                    b.Property<int>("IdResultadoIndicador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdResultadoIndicador"));

                    b.Property<DateTime?>("FechaCalculo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("IdEncuesta")
                        .HasColumnType("int");

                    b.Property<int>("IdIndicador")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(5, 3)");

                    b.HasKey("IdResultadoIndicador")
                        .HasName("PK__Resultad__038B095E94CDFF22");

                    b.HasIndex("IdEncuesta");

                    b.HasIndex("IdIndicador");

                    b.ToTable("ResultadosIndicadoresIEPM", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.ResumenIce", b =>
                {
                    b.Property<int>("IdEmprendedor")
                        .HasColumnType("int")
                        .HasColumnName("id_emprendedor");

                    b.Property<int>("IdEncuesta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("id_encuesta");

                    b.Property<int?>("IdIndicadores")
                        .HasColumnType("int")
                        .HasColumnName("id_indicadores");

                    b.Property<decimal>("ValorIceTotal")
                        .HasColumnType("decimal(6, 5)")
                        .HasColumnName("valor_ice_total");

                    b.HasIndex("IdEmprendedor");

                    b.HasIndex(new[] { "IdIndicadores" }, "id_indicador_ice_ibfk_2");

                    b.ToTable("resumen_ice", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("contraseña");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("correo");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_creacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre");

                    b.Property<string>("TipoUsuario")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("tipo_usuario");

                    b.HasKey("IdUsuario");

                    b.HasIndex(new[] { "Correo" }, "correo")
                        .IsUnique();

                    b.ToTable("usuarios", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.CriteriosEvaluacionIepm", b =>
                {
                    b.HasOne("WebApplication1.Models.IndicadoresIepm", "IdIndicadorNavigation")
                        .WithMany("CriteriosEvaluacionIepms")
                        .HasForeignKey("IdIndicador")
                        .IsRequired()
                        .HasConstraintName("FK__Criterios__IdInd__7A3223E8");

                    b.Navigation("IdIndicadorNavigation");
                });

            modelBuilder.Entity("WebApplication1.Models.DatosEmp", b =>
                {
                    b.HasOne("WebApplication1.Models.Emprendedore", "IdEmprendedorNavigation")
                        .WithMany("DatosEmps")
                        .HasForeignKey("IdEmprendedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_id_emprendedor");

                    b.Navigation("IdEmprendedorNavigation");
                });

            modelBuilder.Entity("WebApplication1.Models.Emprendedore", b =>
                {
                    b.HasOne("WebApplication1.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Emprendedores")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("emprendedores_ibfk_1");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("WebApplication1.Models.EncuestasIce", b =>
                {
                    b.HasOne("WebApplication1.Models.Emprendedore", "IdEmprendedorNavigation")
                        .WithMany("EncuestasIces")
                        .HasForeignKey("IdEmprendedor")
                        .IsRequired()
                        .HasConstraintName("encuestas_ice_ibfk_1");

                    b.HasOne("WebApplication1.Models.PreguntasIce", "IdPreguntaNavigation")
                        .WithMany("EncuestasIces")
                        .HasForeignKey("IdPregunta")
                        .IsRequired()
                        .HasConstraintName("encuestas_ice_ibfk_2");

                    b.Navigation("IdEmprendedorNavigation");

                    b.Navigation("IdPreguntaNavigation");
                });

            modelBuilder.Entity("WebApplication1.Models.EncuestasIepm", b =>
                {
                    b.HasOne("WebApplication1.Models.Emprendedore", "IdEmprendedorNavigation")
                        .WithMany("EncuestasIepms")
                        .HasForeignKey("IdEmprendedor")
                        .IsRequired()
                        .HasConstraintName("FK__Encuestas__IdEmp__634EBE90");

                    b.Navigation("IdEmprendedorNavigation");
                });

            modelBuilder.Entity("WebApplication1.Models.IndicadoresIepm", b =>
                {
                    b.HasOne("WebApplication1.Models.DimensionesIepm", "IdDimensionNavigation")
                        .WithMany("IndicadoresIepms")
                        .HasForeignKey("IdDimension")
                        .IsRequired()
                        .HasConstraintName("FK__Indicador__IdDim__6AEFE058");

                    b.Navigation("IdDimensionNavigation");
                });

            modelBuilder.Entity("WebApplication1.Models.PreguntasIce", b =>
                {
                    b.HasOne("WebApplication1.Models.Competencia", "IdCompetenciaNavigation")
                        .WithMany("PreguntasIces")
                        .HasForeignKey("IdCompetencia")
                        .IsRequired()
                        .HasConstraintName("preguntas_ice_ibfk_1");

                    b.Navigation("IdCompetenciaNavigation");
                });

            modelBuilder.Entity("WebApplication1.Models.PreguntasIepm", b =>
                {
                    b.HasOne("WebApplication1.Models.CuestionariosIepm", "IdCuestionarioNavigation")
                        .WithMany("PreguntasIepms")
                        .HasForeignKey("IdCuestionario")
                        .IsRequired()
                        .HasConstraintName("FK__Preguntas__IdCue__70A8B9AE");

                    b.HasOne("WebApplication1.Models.IndicadoresIepm", "IdIndicadorNavigation")
                        .WithMany("PreguntasIepms")
                        .HasForeignKey("IdIndicador")
                        .IsRequired()
                        .HasConstraintName("FK__Preguntas__IdInd__719CDDE7");

                    b.Navigation("IdCuestionarioNavigation");

                    b.Navigation("IdIndicadorNavigation");
                });

            modelBuilder.Entity("WebApplication1.Models.RespuestasIepm", b =>
                {
                    b.HasOne("WebApplication1.Models.Emprendedore", "IdEmprendedorNavigation")
                        .WithMany("RespuestasIepms")
                        .HasForeignKey("IdEmprendedor")
                        .HasConstraintName("FK__Respuesta__IdEmp__777D8AB1");

                    b.HasOne("WebApplication1.Models.EncuestasIepm", "IdEncuestaNavigation")
                        .WithMany("RespuestasIepms")
                        .HasForeignKey("IdEncuesta")
                        .IsRequired()
                        .HasConstraintName("FK__Respuesta__IdEnc__756D6ECB");

                    b.HasOne("WebApplication1.Models.PreguntasIepm", "IdPreguntaNavigation")
                        .WithMany("RespuestasIepms")
                        .HasForeignKey("IdPregunta")
                        .IsRequired()
                        .HasConstraintName("FK__Respuesta__IdPre__76619304");

                    b.Navigation("IdEmprendedorNavigation");

                    b.Navigation("IdEncuestaNavigation");

                    b.Navigation("IdPreguntaNavigation");
                });

            modelBuilder.Entity("WebApplication1.Models.ResultadosAccionesIepm", b =>
                {
                    b.HasOne("WebApplication1.Models.AccionesMejoraIepm", "IdAccionNavigation")
                        .WithMany("ResultadosAccionesIepms")
                        .HasForeignKey("IdAccion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ResultadosAcciones_AccionesMejora");

                    b.HasOne("WebApplication1.Models.ResultadosIepm", "IdResultadoIepmNavigation")
                        .WithMany("ResultadosAccionesIepms")
                        .HasForeignKey("IdResultadoIepm")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ResultadosAcciones_ResultadosIEPM");

                    b.Navigation("IdAccionNavigation");

                    b.Navigation("IdResultadoIepmNavigation");
                });

            modelBuilder.Entity("WebApplication1.Models.ResultadosDimensionesIepm", b =>
                {
                    b.HasOne("WebApplication1.Models.DimensionesIepm", "IdDimensionNavigation")
                        .WithMany("ResultadosDimensionesIepms")
                        .HasForeignKey("IdDimension")
                        .IsRequired()
                        .HasConstraintName("FK__Resultado__IdDim__05A3D694");

                    b.HasOne("WebApplication1.Models.EncuestasIepm", "IdEncuestaNavigation")
                        .WithMany("ResultadosDimensionesIepms")
                        .HasForeignKey("IdEncuesta")
                        .IsRequired()
                        .HasConstraintName("FK__Resultado__IdEnc__04AFB25B");

                    b.Navigation("IdDimensionNavigation");

                    b.Navigation("IdEncuestaNavigation");
                });

            modelBuilder.Entity("WebApplication1.Models.ResultadosIce", b =>
                {
                    b.HasOne("WebApplication1.Models.Competencia", "IdCompetenciaNavigation")
                        .WithMany("ResultadosIces")
                        .HasForeignKey("IdCompetencia")
                        .IsRequired()
                        .HasConstraintName("resultados_ice_ibfk_2");

                    b.HasOne("WebApplication1.Models.Emprendedore", "IdEmprendedorNavigation")
                        .WithMany("ResultadosIces")
                        .HasForeignKey("IdEmprendedor")
                        .IsRequired()
                        .HasConstraintName("resultados_ice_ibfk_1");

                    b.Navigation("IdCompetenciaNavigation");

                    b.Navigation("IdEmprendedorNavigation");
                });

            modelBuilder.Entity("WebApplication1.Models.ResultadosIepm", b =>
                {
                    b.HasOne("WebApplication1.Models.Emprendedore", "IdEmprendedorNavigation")
                        .WithMany("ResultadosIepms")
                        .HasForeignKey("IdEmprendedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ResultadosIEPM_Emprendedores");

                    b.HasOne("WebApplication1.Models.EncuestasIepm", "IdEncuestaNavigation")
                        .WithMany("ResultadosIepms")
                        .HasForeignKey("IdEncuesta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ResultadosIEPM_Encuestas");

                    b.Navigation("IdEmprendedorNavigation");

                    b.Navigation("IdEncuestaNavigation");
                });

            modelBuilder.Entity("WebApplication1.Models.ResultadosIndicadoresIepm", b =>
                {
                    b.HasOne("WebApplication1.Models.EncuestasIepm", "IdEncuestaNavigation")
                        .WithMany("ResultadosIndicadoresIepms")
                        .HasForeignKey("IdEncuesta")
                        .IsRequired()
                        .HasConstraintName("FK__Resultado__IdEnc__7EF6D905");

                    b.HasOne("WebApplication1.Models.IndicadoresIepm", "IdIndicadorNavigation")
                        .WithMany("ResultadosIndicadoresIepms")
                        .HasForeignKey("IdIndicador")
                        .IsRequired()
                        .HasConstraintName("FK__Resultado__IdInd__7FEAFD3E");

                    b.Navigation("IdEncuestaNavigation");

                    b.Navigation("IdIndicadorNavigation");
                });

            modelBuilder.Entity("WebApplication1.Models.ResumenIce", b =>
                {
                    b.HasOne("WebApplication1.Models.Emprendedore", "IdEmprendedorNavigation")
                        .WithMany()
                        .HasForeignKey("IdEmprendedor")
                        .IsRequired()
                        .HasConstraintName("resumen_ice_ibfk_1");

                    b.HasOne("WebApplication1.Models.Indicadore", "IdIndicadoresNavigation")
                        .WithMany()
                        .HasForeignKey("IdIndicadores")
                        .HasConstraintName("id_indicador_ice_ibfk_2");

                    b.Navigation("IdEmprendedorNavigation");

                    b.Navigation("IdIndicadoresNavigation");
                });

            modelBuilder.Entity("WebApplication1.Models.AccionesMejoraIepm", b =>
                {
                    b.Navigation("ResultadosAccionesIepms");
                });

            modelBuilder.Entity("WebApplication1.Models.Competencia", b =>
                {
                    b.Navigation("PreguntasIces");

                    b.Navigation("ResultadosIces");
                });

            modelBuilder.Entity("WebApplication1.Models.CuestionariosIepm", b =>
                {
                    b.Navigation("PreguntasIepms");
                });

            modelBuilder.Entity("WebApplication1.Models.DimensionesIepm", b =>
                {
                    b.Navigation("IndicadoresIepms");

                    b.Navigation("ResultadosDimensionesIepms");
                });

            modelBuilder.Entity("WebApplication1.Models.Emprendedore", b =>
                {
                    b.Navigation("DatosEmps");

                    b.Navigation("EncuestasIces");

                    b.Navigation("EncuestasIepms");

                    b.Navigation("RespuestasIepms");

                    b.Navigation("ResultadosIces");

                    b.Navigation("ResultadosIepms");
                });

            modelBuilder.Entity("WebApplication1.Models.EncuestasIepm", b =>
                {
                    b.Navigation("RespuestasIepms");

                    b.Navigation("ResultadosDimensionesIepms");

                    b.Navigation("ResultadosIepms");

                    b.Navigation("ResultadosIndicadoresIepms");
                });

            modelBuilder.Entity("WebApplication1.Models.IndicadoresIepm", b =>
                {
                    b.Navigation("CriteriosEvaluacionIepms");

                    b.Navigation("PreguntasIepms");

                    b.Navigation("ResultadosIndicadoresIepms");
                });

            modelBuilder.Entity("WebApplication1.Models.PreguntasIce", b =>
                {
                    b.Navigation("EncuestasIces");
                });

            modelBuilder.Entity("WebApplication1.Models.PreguntasIepm", b =>
                {
                    b.Navigation("RespuestasIepms");
                });

            modelBuilder.Entity("WebApplication1.Models.ResultadosIepm", b =>
                {
                    b.Navigation("ResultadosAccionesIepms");
                });

            modelBuilder.Entity("WebApplication1.Models.Usuario", b =>
                {
                    b.Navigation("Emprendedores");
                });
#pragma warning restore 612, 618
        }
    }
}
